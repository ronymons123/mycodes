#include<stdio.h>
#include<string.h>

struct directory
{
    char dirname[20], fname[10][20];
    int fcount;
}dir[10];

int dircount;
void addfile()
{
    char fn[20],dn[20];
    int flag=0;
    int flag2=0;
    printf("\nEnter name of directory: ");
    scanf("%s",dn);
    for(int i=0;i<dircount;i++)
    {
        if(strcmp(dn,dir[i].dirname)==0)
        {
            flag=1;
            printf("Enter name of new file: ");
            scanf("%s",fn);
            for(int j=0;j<dir[i].fcount;j++)
            {
                if(strcmp(fn,dir[i].fname[j])==0)
                {
                    flag2=1;
                    break;
                }
            }
            if(flag2==0)
            {
                strcpy(dir[i].fname[dir[i].fcount],fn);
                dir[i].fcount++;
                printf("File created successfully");
            }
            else
                printf("File already exists. Try another name.\n");
            break;
        }
    }
    if(flag==0)
        printf("Directory not found");
}

void createdir()
{
    char dn[20];
    printf("\nEnter name of new directory: ");
    scanf("%s",dn);
    int flag=0;

    for(int i=0;i<dircount;i++)
    {
        if(strcmp(dn,dir[i].dirname)==0)
        {
            flag=1;
            printf("Directory already exists. Try another name.");
            break;
        }
    }
    if(flag==0)
    {
        strcpy(dir[dircount].dirname,dn);
        dir[dircount].fcount=0;
        dircount++;
        printf("Directory created successfully");
    }
}

void deletefile()
{
    char fn[20],dn[20];
    int flag=0;
    printf("\nEnter name of directory: ");
    scanf("%s",dn);

    for(int i=0;i<dircount;i++)
    {
        if(strcmp(dn,dir[i].dirname)==0)
        {
            flag=1;
            printf("Enter name of file to be deleted: ");
            scanf("%s",fn);
            int flag2=0;
            for(int j=0;j<dir[i].fcount;j++)
            {
                if(strcmp(fn,dir[i].fname[j])==0)
                {
                    flag2=1;
                    while(j+1<dir[i].fcount)
                    {
                        strcpy(dir[i].fname[j],dir[i].fname[j+1]);
                        j++;
                    }
                    printf("File deleted");
                    dir[i].fcount--;
                    break;
                }
            }
            if(flag2==0)
                printf("File not found");
            break;
        }
    }
    if(flag==0)
        printf("Directory not found");
}

void display()
{
    char dn[20];
    printf("\nEnter the name of directory: ");
    scanf("%s",dn);
    int flag=0;
    for(int i=0;i<dircount;i++)
    {
        if(strcmp(dn,dir[i].dirname)==0)
        {
            flag=1;
            printf("Directory: %s",dir[i].dirname);
            for(int j=0;j<dir[i].fcount;j++)
                printf("\n>>%s",dir[i].fname[j]);
            break;
        }
    }
    if(flag==0)
        printf("Directory not found");
}

void search()
{
    char fn[20];
    printf("\nEnter the name of file to be found: ");
    scanf("%s",fn);
    int flag=0;
    for(int i=0;i<dircount;i++)
    {
        for(int j=0;j<dir[i].fcount;j++)
        {
            if(strcmp(fn,dir[i].fname[j])==0)
            {
                flag=1;
                printf("File present in directory %s",dir[i].dirname);
                break;
            }
        }
        if(flag==1)
            break;
    }
    if(flag==0)
        printf("File not present in any directory");
}

int main()
{
    dircount=0;
    int opt;
    do
    {
        printf("\n\nWhat would you like to do?");
        printf("\n1.Create directory\n2.Create file \n3.Delete file \n4.Display all files in a directory \n5.Search for a file \n6.Exit");
        printf("\nEnter option: ");
        scanf("%d",&opt);
        switch(opt)
        {
            case 1: createdir();
                    break;
            case 2: addfile();
                    break;
            case 3: deletefile();
                    break;
            case 4: display();
                    break;
            case 5: search();
                    break;
            case 6: printf("\nProgram Exited\n");
                    break;
            default: printf("Invalid option");
        }
    }while(opt!=6);
    return 0;
}
